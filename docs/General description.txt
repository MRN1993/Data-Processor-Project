هدف پروژه

این پروژه به منظور پردازش درخواست‌های کاربر طراحی شده است. سیستم از درخواست‌های کاربران، محدودیت‌های دسترسی، و ثبت اطلاعات پردازش‌شده پشتیبانی می‌کند و با استفاده از کافکا برای پردازش‌های موازی و Redis برای مدیریت قفل و جلوگیری از دوباره‌کاری طراحی شده است.

ساختار پروژه

ساختار کلی پروژه به گونه‌ای طراحی شده که هر بخش وظایف خاص خود را دارد. این ساختار به صورت ماژولار طراحی شده و قابلیت مقیاس‌پذیری و توسعه را فراهم می‌کند.

شرح دایرکتوری‌ها

    config/
        این دایرکتوری شامل فایل‌های پیکربندی سیستم است. تمام متغیرهای مورد نیاز برای کانفیگ و تنظیمات پایه‌ای در این دایرکتوری قرار دارند.

    internal/

        این دایرکتوری شامل کدهای داخلی است که از طریق دیگر بخش‌های برنامه استفاده می‌شوند و به بخش‌های مختلف تقسیم می‌شود:

            domain/

                models/
                    شامل مدل‌های داده‌ای مانند request و user است که برای تعریف ساختار داده‌ای سیستم استفاده می‌شوند.

                services/
                    شامل سرویس‌های مرتبط با پردازش درخواست‌ها، اعتبارسنجی داده‌ها، و کافکا است. فایل‌های request_service.go, validation_service.go و kafka_service.go هر کدام بخشی از عملیات سرویس‌دهی را انجام می‌دهند.

                logic/
                    منطق تجاری سیستم در این بخش قرار دارد. user_logic.go و request_logic.go هر کدام برای مدیریت پردازش‌های پیچیده‌تر کاربران و درخواست‌ها استفاده می‌شوند.

            api/
                این بخش شامل فایل‌هایی مانند user_api.go و request_api.go است که API‌های سیستم را پیاده‌سازی می‌کند. این فایل‌ها به عنوان ورودی‌های اصلی از درخواست‌های خارجی به سیستم عمل می‌کنند.

            repository/
                فایل migrate.go برای مدیریت مهاجرت داده‌ها و تغییرات ساختار داده‌ها در پایگاه‌ داده استفاده می‌شود.

            logs/
                فایل‌های مربوط به لاگ و ثبت رویدادهای برنامه در این بخش قرار دارند. logger.go برای پیکربندی لاگ‌ها و app.log برای ذخیره اطلاعات لاگ‌ها استفاده می‌شوند.

            kafka/
                شامل تنظیمات و فایل‌های مرتبط با کافکا، مانند kafka_config.go و kafka_consumer.go است که برای ارسال و مصرف پیام‌ها در کافکا استفاده می‌شود.

    main.go
        این فایل نقطه شروع برنامه است و با بارگذاری پیکربندی‌ها، اتصال به سرویس‌ها و اجرای سرویس‌های اصلی، برنامه را راه‌اندازی می‌کند.
